<!DOCTYPE OMNotebook>
<Notebook>
  <GroupCell closed="false">
    <GroupCell closed="false">
      <TextCell style="Title">
        <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:10px; margin-bottom:10px; margin-left:10px; margin-right:10px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Arial'; font-size:38pt; font-weight:600; color:#000000;">Application of Scalar Functions to Arrays&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
      </TextCell>
      <TextCell style="Text">
        <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">&lt;br />It is possible to apply a function to array values if an obvious generalization to element-wise application of the function is possible. Modelica functions with one scalar return value can be applied to arrays element-wise, e.g. if &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">v&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> is a vector of reals, then &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">sin(v)&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> is a vector where each element is the result of applying the function &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">sin&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> to the corresponding element in &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">v&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">.&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
      </TextCell>
      <GroupCell closed="false">
        <TextCell style="Section">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:18pt; font-weight:600; color:#000000;">One Return Value&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>class OneReturnValue
  Real a = 1, b = 0, c = 1;
  Real s1[3] = sin({a, b, c});
                // Vector argument, result: {sin(a), sin(b), sin(c)}
  Real s2[2, 2] = sin([1, 2; 3, 4]);
                // Matrix argument, result: [sin(1), sin(2); sin(3), sin(4)]
end OneReturnValue;  </Input>
          <Output>{OneReturnValue}</Output>
        </GraphCell>
        <GroupCell closed="false">
          <TextCell style="Subsection">
            <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:14pt; font-weight:600; color:#000000;">Simulation of OneReturnValue&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          </TextCell>
          <GraphCell style="Graph" closed="false">
            <Input>simulation( OneReturnValue ) </Input>
            <Output>record SimulationResult
    messages = "",
    simulationTime = 0.13338830273598043
end SimulationResult;</Output>
          </GraphCell>
          <TextCell style="Text">
            <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">Take a look at the value at time=0:&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          </TextCell>
          <GraphCell style="Graph" closed="false">
            <Input>val(s1[3],0)</Input>
            <Output>0.8414709848078965</Output>
          </GraphCell>
        </GroupCell>
      </GroupCell>
      <GroupCell closed="false">
        <TextCell style="Section">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:18pt; font-weight:600; color:#000000;">Returning More Values&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">Functions with more than one argument can be generalized to element-wise application. If more than one argument is generalized to an array, all of the arguments have to be of the same size, and they are traversed in parallel. This is the case in the example with the function &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">atan2(x, y)&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> below. The function: &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">atan2Add(w, x, y) = w + atan2(x, y)&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">adds a value w to each application of &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">atan2&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          <Rule name="TextAlignment">Left</Rule>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>class SeveralArguments
  Real a = 1, b = 0, c = 1, d = 0, e = 1, f = 0;
  Real at[3] = atan2({a, b, c}, {d, e, f});
                         // Result: {atan2(a, d), atan2(b, e), atan2(c, f)}
  Real atAdd[2] = atan2Add(2, {a, b}, {d, e});
                         // Result: {2 + atan2(a, d), 2 + atan2(b, e)}
end SeveralArguments;</Input>
          <Output>{SeveralArguments}</Output>
        </GraphCell>
      </GroupCell>
      <GroupCell closed="false">
        <TextCell style="Section">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:18pt; font-weight:600; color:#000000;">SumVec&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">Formal function parameters that are generalized to higher dimension arrays need not necessarily be scalars. For example, the function:&lt;br />&lt;br />&lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">atan2SumVec(v1, v2) = atan2(sum(v1), sum(v2))&lt;br />                            &lt;br />&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">used below has two formal parameters &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">v1&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> and &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">v2&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> of type &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Real[:]&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> computing &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">atan2&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> on the sums of the argument vectors. Applying this function on a matrix which is a vector of vectors gives a result which is a vector. Calling this function with two matrices M1 and M2 as arguments gives the following result:    &lt;br />            &lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>class SumVec
  Real[3] v1 = {1, 2, 3};
  Real[3] v2 = {6, 4, 5};
  Real[3] v3 = {3, 7, 6};
  Real[3] v4 = {1, 3, 8};
  Real[2, 3] M1 = {v1, v2};
  Real[2, 3] M2 = {v3, v4};

  Real sv1[2] = atan2SumVec(M1, M2);
    // atan2SumVec({v1, v2}, {v3, v4}) &lt;=> {atan2(sum(v1), sum(v2)), atan2(sum(v3), sum(v4))}

  Real sv2[2] = atan2SumVec({{1, 2}, {3, 4}}, {{6, 7}, {8, 9}});
    // {atan2(sum({1, 2}), sum({3, 4})), atan2(sum({6, 7}), sum({8, 9}))}
    // &lt;=> {atan2(3, 7), atan2(13, 17) }
end SumVec;</Input>
          <Output>{SumVec}</Output>
        </GraphCell>
      </GroupCell>
    </GroupCell>
  </GroupCell>
</Notebook>
